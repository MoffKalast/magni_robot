<launch>

    <arg name="fiducial_len" default="0.14"/>
    <arg name="GO_fiducials" default="[51, 49]"/>
    <arg name="STOP_fiducials" default="[50]"/>

    <!-- We want aruco detect to give us the 6DOF pose, 
    not just the pixel coordinates of the vertices -->
    <arg name="do_pose_estimation" default="true"/>

    <!-- Use higher resolution camera so fiducials are easier to see on the floor         -->
    <!-- To experiment with floor fiducials use the 410x308 raspicam and 0.14mm fiducials -->
    <!-- Original follow used camerav2_410x308_30fps  try camerav2_1640x1232_10fps        -->
    <include file="$(find magni_description)/launch/description.launch" />
    <include file="$(find raspicam_node)/launch/camerav2_1280x960.launch" />

    <!-- Run aruco_detect with special parameters to optimize for speed -->
    <node pkg="aruco_detect" name="aruco_detect" type="aruco_detect" output="screen" respawn="false">
        <param name="image_transport" value="compressed"/>
        <param name="publish_images" value="true" />
        <param name="fiducial_len" value="$(arg fiducial_len)"/>
        <param name="do_pose_estimation" value="$(arg do_pose_estimation)"/>
        <param name="adaptiveThreshWinSizeStep" value="4" />
        <param name="adaptiveThreshWinSizeMin" value="10" />
        <param name="adaptiveThreshWinSizeMax" value="100" />
        <param name="doCornerRefinement" value="False" />
        <param name="do_tracking" value="false" />
        <param name="num_threads" value="4" />
        <remap from="/camera/compressed" to="/raspicam_node/image/compressed"/>
        <remap from="/camera_info" to="/raspicam_node/camera_info"/>
    </node>

    <!-- Run move_basic to drive the robot -->
    <node name="move_basic" pkg="move_basic" type="move_basic" output="screen">
        <!-- Footprint for obstacle detection -->
        <param name="robot_width" value="0.20"/>
        <param name="robot_front_length" value="0.1"/>
        <param name="robot_back_length" value="0.32"/>

        <param name="max_linear_velocity" value="1.2"/>
        <param name="min_linear_velocity" value="0.25"/>
        <param name="linear_acceleration" value="1.0"/>

        <param name="min_angular_velocity" value="0.0001"/>
        <param name="angularAcceleration" value="0.3"/>
        
        <param name="rotation_attempts" value="1"/>

        <param name="verbose_info" value="False"/>
        <param name="smooth_follow" value="True"/>
        <param name="smooth_breaking_min" value="0"/>
        <param name="smooth_breaking_max" value="0.006"/>
        
        <!-- lateral control -->
        <param name="max_angular_deviation" value="1.0"/>
        <param name="max_linear_deviation" value="1.0"/>

        <param name="reverse_without_turning_threshold" value="0.01"/>

        <param name="linear_tolerance" value="0.01"/>
        <param name="angular_tolerance" value="0.01"/>

        <param name="localization_latency" value="0.01"/>
        <param name="map_frame" value="odom"/>

        <param name="lateral_kp" value="5.0"/>
        <param name="lateral_ki" value="0.0"/>
        <param name="lateral_kd" value="60.0"/>
    </node> 

    <!-- Run ground_fiducials to generate move_base goals -->
    <node name="smooth_fiducials" pkg="ground_fiducials" type="smooth_fiducials.py" output="screen">
        <param name="GO_fiducials" value="$(arg GO_fiducials)"/>
        <param name="STOP_fiducials" value="$(arg STOP_fiducials)"/>
    </node>

</launch>
